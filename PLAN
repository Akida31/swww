These are the steps we will take while developing this program:

	Put a simple white sheet to the background. DONE

	Put a png file instead (zigimg has a png reader). DONE

	Scale the png before printing. DONE

    Run program as a daemon. DONE

	Create a communication procedure with the daemon, that allows for: DONE
		Changing the image. DONE
		Killing the daemon. DONE

	Now fswww should only be run as both a daemon, and a cli program. DONE

	support for selecting the output when sending img path DONE
	support for selecting the filter when switching img path

	If the same img are sent to different monitors, scale them only once. DONE. As long as they are sent together

	WRITE AUTOMATED TESTING SCRIPT

	Make the transition effects when switching rendered files
		^^ THIS ONE IS A BIT UNPREDICTABLE ^^
		When done, communication protocol should be updated to allow for transition effects

	Write custom gif reader.
		If we find only one image, we use the previous logic.
		Make a pipeline with the reading.
		Store only the difference of one frame to the next.
		Update by copying the contents of the previous buffer onto the current one, and then only updating the difference.
		Once everything is cached, remember to free the file.
		At this point, transition between gif and png should be abrupt.

	Study possibility of using Huffman's with the above.
		We could create a sort of bag with all the possible pixels in the image.
		Memory usage would decrease significantly, at the added processing cost of having to decode
		the sequence of bits everytime before updating a frame. 
		There's also the extra processing cost of doing the encoding in the first place.

	Write logic to make transition between png and gif smoother.
	Write logic to make transition between 2 gifs smoother.

	With all this done, adapt communication procedure to allow for streams
